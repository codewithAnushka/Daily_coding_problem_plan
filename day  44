class Solution
{
    public:
    vector<int> find(int arr[], int n , int x )
    {
        // code here
        if(x<arr[0] || x>arr[n-1])
            return {-1, -1};
        int st=0, en=n-1;
        int lo = 0, hi = n-1;
        
        while(lo<=hi){
            int mid = (lo+hi)/2;
            if(arr[mid] == x){
                if((mid-1)>0 && arr[mid-1]!=x){
                    st = mid;
                    break;
                }
                else if(mid==0){
                    st = mid;
                    break;
                }
                else{
                    hi = mid-1;
                }
            }
            else if(arr[mid] > x){
                hi = mid-1;
            }
            else{
                lo = mid+1;
            }
        }
        
        if(arr[st]!=x)
            return {-1, -1};
        
        lo = st, hi = n-1;
        
        while(lo<=hi){
            int mid = (lo+hi)/2;
            if(arr[mid] == x){
                if((mid+1)<n && arr[mid+1]!=x){
                    en = mid;
                    break;
                }
                else if(mid==n-1){
                    en = mid;
                    break;
                }
                else{
                    lo = mid+1;
                }
            }
            else if(arr[mid] > x){
                hi = mid-1;
            }
            else{
                lo = mid+1;
            }
        }
        
        return {st, en};
    }
};
