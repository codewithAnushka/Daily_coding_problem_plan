class Solution
{
  public:
    vector<int> findOrder(int N, int P, vector<vector<int>> prerequisites) 
    {
        //code here
        vector<int> indegree(N,0),adj[N],ans;
    for(int i=0;i<P;++i)
    {
        adj[prerequisites[i][1]].push_back(prerequisites[i][0]);
        indegree[prerequisites[i][0]]++;
    }
   // Topological sort
    queue<int> q;
    for(int i=0;i<N;++i)
    {
        if(!indegree[i])
            q.push(i);
    }
    while(!q.empty())
    {
        int x=q.front();
        q.pop();
        ans.push_back(x);
        for(auto &it:adj[x])
        {
            --indegree[it];
            if(indegree[it]==0)
                q.push(it);
        }
    }
   // cout<<(ans.size()==N)<<" ";
    if(ans.size()==N)
        return ans;
    return {};
    }
};
