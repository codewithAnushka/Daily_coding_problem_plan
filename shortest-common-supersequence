//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++


class Solution
{
    public:
   int dp[101][101];
    //Function to find length of shortest common supersequence of two strings.
     int shortestCommonSupersequence(string s, string t, int m, int n)
    {
        memset(dp, 0, sizeof(dp));
        
        for(int i=1; i<=m; i++)
        {
            for(int j=1; j<=n; j++)
            {
                if(s[i-1] == t[j-1]) dp[i][j] = 1 + dp[i-1][j-1];
                else
                {
                    int x = dp[i-1][j];
                    int y = dp[i][j-1];
                    
                    dp[i][j] = max(x, y);
                }
            }
        }
        
        return (n+m)-dp[m][n];
    }
};

//{ Driver Code Starts.

int main()
{   
    
    int t;
    
    //taking total testcases
    cin >> t;
    while(t--){
    string X, Y;
    //taking String X and Y
	cin >> X >> Y;
	
	//calling function shortestCommonSupersequence()
	Solution obj;
	cout << obj.shortestCommonSupersequence(X, Y, X.size(), Y.size())<< endl;
    }
	return 0;
}


// } Driver Code Ends
